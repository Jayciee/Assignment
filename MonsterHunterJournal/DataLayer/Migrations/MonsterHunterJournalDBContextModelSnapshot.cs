// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataLayer.Migrations
{
    [DbContext(typeof(MonsterHunterJournalDBContext))]
    partial class MonsterHunterJournalDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataLayer.Ailment", b =>
                {
                    b.Property<int>("AilmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AilmentID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("AilmentId");

                    b.ToTable("Ailments");
                });

            modelBuilder.Entity("DataLayer.CounterTactic", b =>
                {
                    b.Property<int>("WeaponTypeId")
                        .HasColumnType("int")
                        .HasColumnName("WeaponTypeID");

                    b.Property<int>("HabitId")
                        .HasColumnType("int")
                        .HasColumnName("HabitID");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("WeaponTypeId", "HabitId")
                        .HasName("PK__CounterT__19D4B1583508EDBF");

                    b.HasIndex("HabitId");

                    b.ToTable("CounterTactics");
                });

            modelBuilder.Entity("DataLayer.Element", b =>
                {
                    b.Property<int>("ElementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ElementID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ElementId");

                    b.ToTable("Elements");
                });

            modelBuilder.Entity("DataLayer.Habit", b =>
                {
                    b.Property<int>("HabitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HabitID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("HabitName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("HabitId");

                    b.ToTable("Habits");
                });

            modelBuilder.Entity("DataLayer.Monster", b =>
                {
                    b.Property<int>("MonsterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MonsterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("MonsterImage")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("PrimaryAilmentId")
                        .HasColumnType("int")
                        .HasColumnName("PrimaryAilmentID");

                    b.Property<int?>("PrimaryElementId")
                        .HasColumnType("int")
                        .HasColumnName("PrimaryElementID");

                    b.Property<int?>("SizeId")
                        .HasColumnType("int")
                        .HasColumnName("SizeID");

                    b.Property<int?>("ThreatLevel")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("MonsterId");

                    b.HasIndex("PrimaryAilmentId");

                    b.HasIndex("PrimaryElementId");

                    b.HasIndex("SizeId");

                    b.ToTable("Monsters");
                });

            modelBuilder.Entity("DataLayer.MonstersHabit", b =>
                {
                    b.Property<int>("MonsterId")
                        .HasColumnType("int")
                        .HasColumnName("MonsterID");

                    b.Property<int>("HabitId")
                        .HasColumnType("int")
                        .HasColumnName("HabitID");

                    b.HasKey("MonsterId", "HabitId")
                        .HasName("PK__Monsters__F04D3A367108AAFA");

                    b.HasIndex("HabitId");

                    b.ToTable("Monsters_Habits");
                });

            modelBuilder.Entity("DataLayer.Record", b =>
                {
                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("HuntSucceeded")
                        .HasColumnType("bit");

                    b.Property<string>("HunterName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("MonsterId")
                        .HasColumnType("int")
                        .HasColumnName("MonsterID");

                    b.Property<decimal?>("RecordedMonsterSize")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("TimeTaken")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("WeaponId")
                        .HasColumnType("int")
                        .HasColumnName("WeaponID");

                    b.HasKey("RecordId");

                    b.HasIndex("MonsterId");

                    b.HasIndex("WeaponId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("DataLayer.Size", b =>
                {
                    b.Property<int>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SizeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("SizeCeiling")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SizeFloor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SizeName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("SizeId");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("DataLayer.Weapon", b =>
                {
                    b.Property<int>("WeaponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WeaponID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AilmentId")
                        .HasColumnType("int")
                        .HasColumnName("AilmentID");

                    b.Property<int?>("ElementId")
                        .HasColumnType("int")
                        .HasColumnName("ElementID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Rarity")
                        .HasColumnType("int");

                    b.Property<int?>("WeaponTypeId")
                        .HasColumnType("int")
                        .HasColumnName("WeaponTypeID");

                    b.HasKey("WeaponId");

                    b.HasIndex("AilmentId");

                    b.HasIndex("ElementId");

                    b.HasIndex("WeaponTypeId");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("DataLayer.WeaponType", b =>
                {
                    b.Property<int>("WeaponTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WeaponTypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TypeName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("WeaponTypeId");

                    b.ToTable("WeaponTypes");
                });

            modelBuilder.Entity("DataLayer.CounterTactic", b =>
                {
                    b.HasOne("DataLayer.Habit", "Habit")
                        .WithMany("CounterTactics")
                        .HasForeignKey("HabitId")
                        .HasConstraintName("FK__CounterTa__Habit__5DCAEF64")
                        .IsRequired();

                    b.HasOne("DataLayer.WeaponType", "WeaponType")
                        .WithMany("CounterTactics")
                        .HasForeignKey("WeaponTypeId")
                        .HasConstraintName("FK__CounterTa__Weapo__5CD6CB2B")
                        .IsRequired();

                    b.Navigation("Habit");

                    b.Navigation("WeaponType");
                });

            modelBuilder.Entity("DataLayer.Monster", b =>
                {
                    b.HasOne("DataLayer.Ailment", "PrimaryAilment")
                        .WithMany("Monsters")
                        .HasForeignKey("PrimaryAilmentId")
                        .HasConstraintName("FK__Monsters__Primar__73BA3083");

                    b.HasOne("DataLayer.Element", "PrimaryElement")
                        .WithMany("Monsters")
                        .HasForeignKey("PrimaryElementId")
                        .HasConstraintName("FK__Monsters__Primar__72C60C4A");

                    b.HasOne("DataLayer.Size", "Size")
                        .WithMany("Monsters")
                        .HasForeignKey("SizeId")
                        .HasConstraintName("FK__Monsters__SizeID__71D1E811");

                    b.Navigation("PrimaryAilment");

                    b.Navigation("PrimaryElement");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("DataLayer.MonstersHabit", b =>
                {
                    b.HasOne("DataLayer.Habit", "Habit")
                        .WithMany("MonstersHabits")
                        .HasForeignKey("HabitId")
                        .HasConstraintName("FK__Monsters___Habit__6C190EBB")
                        .IsRequired();

                    b.HasOne("DataLayer.Monster", "Monster")
                        .WithMany("MonstersHabits")
                        .HasForeignKey("MonsterId")
                        .HasConstraintName("FK__Monsters___Monst__70DDC3D8")
                        .IsRequired();

                    b.Navigation("Habit");

                    b.Navigation("Monster");
                });

            modelBuilder.Entity("DataLayer.Record", b =>
                {
                    b.HasOne("DataLayer.Monster", "Monster")
                        .WithMany("Records")
                        .HasForeignKey("MonsterId")
                        .HasConstraintName("FK__Records__Monster__6FE99F9F");

                    b.HasOne("DataLayer.Weapon", "Weapon")
                        .WithMany("Records")
                        .HasForeignKey("WeaponId")
                        .HasConstraintName("FK__Records__WeaponI__68487DD7");

                    b.Navigation("Monster");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("DataLayer.Weapon", b =>
                {
                    b.HasOne("DataLayer.Ailment", "Ailment")
                        .WithMany("Weapons")
                        .HasForeignKey("AilmentId")
                        .HasConstraintName("FK__Weapons__Ailment__52593CB8");

                    b.HasOne("DataLayer.Element", "Element")
                        .WithMany("Weapons")
                        .HasForeignKey("ElementId")
                        .HasConstraintName("FK__Weapons__Element__5165187F");

                    b.HasOne("DataLayer.WeaponType", "WeaponType")
                        .WithMany("Weapons")
                        .HasForeignKey("WeaponTypeId")
                        .HasConstraintName("FK__Weapons__WeaponT__5070F446");

                    b.Navigation("Ailment");

                    b.Navigation("Element");

                    b.Navigation("WeaponType");
                });

            modelBuilder.Entity("DataLayer.Ailment", b =>
                {
                    b.Navigation("Monsters");

                    b.Navigation("Weapons");
                });

            modelBuilder.Entity("DataLayer.Element", b =>
                {
                    b.Navigation("Monsters");

                    b.Navigation("Weapons");
                });

            modelBuilder.Entity("DataLayer.Habit", b =>
                {
                    b.Navigation("CounterTactics");

                    b.Navigation("MonstersHabits");
                });

            modelBuilder.Entity("DataLayer.Monster", b =>
                {
                    b.Navigation("MonstersHabits");

                    b.Navigation("Records");
                });

            modelBuilder.Entity("DataLayer.Size", b =>
                {
                    b.Navigation("Monsters");
                });

            modelBuilder.Entity("DataLayer.Weapon", b =>
                {
                    b.Navigation("Records");
                });

            modelBuilder.Entity("DataLayer.WeaponType", b =>
                {
                    b.Navigation("CounterTactics");

                    b.Navigation("Weapons");
                });
#pragma warning restore 612, 618
        }
    }
}
